// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Chat/> listing tab <ListItem/> shows the number of unread messages 1`] = `
<Component
  style={
    Object {
      "paddingLeft": 15,
    }
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Object {
        "alignSelf": "flex-end",
        "color": "hsl(0, 0%, 45%)",
        "fontFamily": "Karla",
        "fontSize": 13,
        "marginRight": 10,
        "paddingBottom": 4,
      }
    }
  >
    12:47 AM
  </Text>
  <Badge
    containerStyle={
      Object {
        "alignSelf": "flex-end",
        "backgroundColor": "#42ED86",
        "marginRight": 15,
        "padding": 7,
      }
    }
    textStyle={
      Object {
        "alignSelf": "center",
        "color": "#fff",
        "fontFamily": "Karla",
        "fontSize": 13,
      }
    }
    value={3}
  />
</Component>
`;

exports[`<Chat/> listing tab renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Chats />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "lists": Array [
        Object {
          "image": Object {
            "testUri": "../../../static/pp.jpg",
          },
          "name": "Larry John",
          "text": "You should be here by now, whats up?",
          "timestamp": "12:47 AM",
        },
        Object {
          "image": Object {
            "testUri": "../../../static/yuna.jpg",
          },
          "name": "Jane Doe",
          "text": "Ive been trying to reach you all day                        and youre not picking up, is everything all right?",
          "timestamp": "Yesterday",
        },
      ],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "lists": Array [
          Object {
            "image": Object {
              "testUri": "../../../static/pp.jpg",
            },
            "name": "Larry John",
            "text": "You should be here by now, whats up?",
            "timestamp": "12:47 AM",
          },
          Object {
            "image": Object {
              "testUri": "../../../static/yuna.jpg",
            },
            "name": "Jane Doe",
            "text": "Ive been trying to reach you all day                        and youre not picking up, is everything all right?",
            "timestamp": "Yesterday",
          },
        ],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<Chat/> listing tab should list all chats 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): ShallowWrapper {
    "length": 1,
    Symbol(enzyme.__root__): [Circular],
    Symbol(enzyme.__unrendered__): <MainView
      lists={
        Array [
          Object {
            "image": "",
            "name": "Larry John",
            "text": "I am mocked :)",
            "timestamp": "12:47 AM",
          },
        ]
      }
    />,
    Symbol(enzyme.__renderer__): Object {
      "batchedUpdates": [Function],
      "getNode": [Function],
      "render": [Function],
      "simulateEvent": [Function],
      "unmount": [Function],
    },
    Symbol(enzyme.__node__): Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <List
          containerStyle={
            Object {
              "borderTopWidth": 0,
              "marginTop": 13,
            }
          }
        >
          <MainListItem
            listItem={
              Object {
                "image": "",
                "name": "Larry John",
                "text": "I am mocked :)",
                "timestamp": "12:47 AM",
              }
            }
            typing={true}
          />
        </List>,
        "style": Object {
          "backgroundColor": "#fff",
          "flex": 1,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <MainListItem
              listItem={
                Object {
                  "image": "",
                  "name": "Larry John",
                  "text": "I am mocked :)",
                  "timestamp": "12:47 AM",
                }
              }
              typing={true}
            />,
          ],
          "containerStyle": Object {
            "borderTopWidth": 0,
            "marginTop": 13,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "function",
            "props": Object {
              "listItem": Object {
                "image": "",
                "name": "Larry John",
                "text": "I am mocked :)",
                "timestamp": "12:47 AM",
              },
              "typing": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    Symbol(enzyme.__nodes__): Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <List
            containerStyle={
              Object {
                "borderTopWidth": 0,
                "marginTop": 13,
              }
            }
          >
            <MainListItem
              listItem={
                Object {
                  "image": "",
                  "name": "Larry John",
                  "text": "I am mocked :)",
                  "timestamp": "12:47 AM",
                }
              }
              typing={true}
            />
          </List>,
          "style": Object {
            "backgroundColor": "#fff",
            "flex": 1,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <MainListItem
                listItem={
                  Object {
                    "image": "",
                    "name": "Larry John",
                    "text": "I am mocked :)",
                    "timestamp": "12:47 AM",
                  }
                }
                typing={true}
              />,
            ],
            "containerStyle": Object {
              "borderTopWidth": 0,
              "marginTop": 13,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "function",
              "props": Object {
                "listItem": Object {
                  "image": "",
                  "name": "Larry John",
                  "text": "I am mocked :)",
                  "timestamp": "12:47 AM",
                },
                "typing": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    Symbol(enzyme.__options__): Object {
      "adapter": ReactSixteenAdapter {
        "options": Object {
          "enableComponentDidUpdateOnSetState": true,
        },
      },
    },
  },
  Symbol(enzyme.__unrendered__): null,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <MainListItem
          listItem={
            Object {
              "image": "",
              "name": "Larry John",
              "text": "I am mocked :)",
              "timestamp": "12:47 AM",
            }
          }
          typing={true}
        />,
      ],
      "containerStyle": Object {
        "borderTopWidth": 0,
        "marginTop": 13,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "function",
        "props": Object {
          "listItem": Object {
            "image": "",
            "name": "Larry John",
            "text": "I am mocked :)",
            "timestamp": "12:47 AM",
          },
          "typing": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <MainListItem
            listItem={
              Object {
                "image": "",
                "name": "Larry John",
                "text": "I am mocked :)",
                "timestamp": "12:47 AM",
              }
            }
            typing={true}
          />,
        ],
        "containerStyle": Object {
          "borderTopWidth": 0,
          "marginTop": 13,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "function",
          "props": Object {
            "listItem": Object {
              "image": "",
              "name": "Larry John",
              "text": "I am mocked :)",
              "timestamp": "12:47 AM",
            },
            "typing": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
